<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大厂开发流程</title>
      <link href="/2022/04/07/development-process/"/>
      <url>/2022/04/07/development-process/</url>
      
        <content type="html"><![CDATA[<p>其实对于几十人或者上百人一起开发一个项目的话，一个规范的研发流程是很重要的。</p><p>有的同学可能想，哪有这么多流程啊，就是写完代码，跑一下，没问题，然后就上线了。</p><p>其实在大厂里研发流程是很重要的。</p><p>一个项目从开发到上线到后面的维护，从流程上就保证大家少出错，也方便后面人继续维护。</p><p>那么接下来给大家介绍一下详细的流程。</p><h1 id="1-需求文档"><a href="#1-需求文档" class="headerlink" title="1.需求文档"></a>1.需求文档</h1><p>看需求文档，我们要根据需求文档来确定我们究竟要做什么。</p><p>一些同学可能感觉 为什么还要用一个需求文档呢，你就告诉我做啥我就做啥不就完事了。</p><p>其实需求文档一方面是倒逼产品经理去系统性的思考这个需求究竟有哪些功能，用来满足哪些用户的需求。</p><p>另一方面，是保证我们在研发的时候，研发出来的功能是满足需求文档里所描述的。</p><p>如果是口头对接的话，很有可能就是你做出来的东西，产品经理看完感觉：这和我说的需求不一样啊！！这和我想的不一样啊！！</p><p>这样就是两个人相互甩锅，那这究竟是谁的锅呢。都没有一个证据，对吧。</p><p>所以说，有一个需求文档很重要。</p><p>而且每个阶段的需求文档相当于是把这个项目的整个迭代过程都记录下来了。</p><p>这样也方便后面的人，了解这个项目是如何迭代的。</p><h1 id="2-这个需求包含了哪些功能"><a href="#2-这个需求包含了哪些功能" class="headerlink" title="2.这个需求包含了哪些功能"></a>2.这个需求包含了哪些功能</h1><p>产品经理在需求文档里描述一个功能，那么我们在实现的时候，可能要改很多模块，或者说我们要增加一些模块。</p><p>就是我们从代码的角度上来讲，可能要增添很多功能才能满足 用户看起来好像微不足道的小功能。</p><p>例如点击登录，点击下单，后台都有很多模块协同运行的。</p><p>我们要把产品经理角度上的这个功能，拆解为我们代码角度上的具体应该开发的那些功能。</p><h1 id="3-确定有哪些难点"><a href="#3-确定有哪些难点" class="headerlink" title="3.确定有哪些难点"></a>3.确定有哪些难点</h1><p>这里可能有同学疑惑了，我确定这东西干嘛呢。</p><p>给大家举一个例子，给你一个需求文档。</p><p>你说你一周的时间就能把它开发完，那为什么是一周呢，为什么不是两天，为什么不是两周呢。</p><p>其实 和上面的领导汇报你的工作的时候 都要把自己的工作进行量化。</p><p>那么这个功能有哪些难点，我们要克服这个难点，所需要花费的时间，都要有一个大体的量化。</p><p>这样才能量化我们自己的工作，领导其实不知道你的工作是简单 还是困难, 领导只在意最终结果，所以你要展现给领导你的工作是有难度的是有挑战的。</p><p>而且这些也是我们年底用来晋升或者评职称的素材。</p><p>如果这些东西你自己都不在乎的话，谁还会帮你在乎呢。</p><p>而且确定了自己的工作难点，把这些难点都记录下来，对以后跳槽也很有帮助。</p><p>面试官最喜欢问的问题，就是：你做的项目中有哪些难点？以及你是如何克服的。</p><p>所以这一步对自己个人成长来说也是很有重要的。 对于项目组来说也是记录下来，每一个迭代版本有哪些难点，这些难点团队是如何克服的。</p><p>这也是项目组往上一级去邀功的资料。</p><h1 id="4-画架构图"><a href="#4-画架构图" class="headerlink" title="4.画架构图"></a>4.画架构图</h1><p>一般来说，大厂项目的架构都是比较复杂的，特别是后端架构。</p><p>如果添加一个模块连个文档都没有，连个图也没有，上来就添加的话，后面的人是很难维护的。</p><p>而且每个模块和每一个模块之间的依赖关系，如果没有画出一个架构图的话，直接看代码很容易直接就看懵了。</p><p>为什么你可以快速开发一个新的模块，也是因为之前团队有人把这个架构图画清楚了，你只需要看一眼这个架构图，就知道你的模块应该添加在哪里。</p><p>那么你去添加模块的时候，也应该把这个架构图相应的位置 完善一下。</p><p>同时呢，在画架构图的过程中，也增添了自己对整个系统架构的掌握程度。</p><p>这个图也会让你确定，你的模块在整个项目中扮演一个什么样的角色。</p><h1 id="5-定协议"><a href="#5-定协议" class="headerlink" title="5.定协议"></a>5.定协议</h1><p>后台模块之间进行通讯需要协议，后台和前端通讯也需要协议。</p><p>所以只要有交互，就要确定协议的数据格式。</p><p>定协议要考虑到兼容，要考虑易于维护。</p><h1 id="6-设计数据结构和算法"><a href="#6-设计数据结构和算法" class="headerlink" title="6.设计数据结构和算法"></a>6.设计数据结构和算法</h1><p>其实设计数据结构更多一些，因为我们要选择使用什么容器，什么格式来处理我们的数据。</p><p>至于算法的话，就很少我们亲自设计了。</p><p>什么快排，二叉树，动态规划，最短路啥的，在实际开发中，都不需要我们自己去写，直接调包！</p><p>面试造火箭，工作拧螺丝 就体现在这里。</p><p>为什么会这样呢？ 一个很简单的例子，互联网研发讲究其实就是要快，例如一个功能2天就要开发完，如果算法都要自己去写的话，等都写完了，花都谢了。</p><h1 id="7-预估一下容量"><a href="#7-预估一下容量" class="headerlink" title="7.预估一下容量"></a>7.预估一下容量</h1><p>特别是后端开发，要估计出 我们自己模块大体需要多大磁盘，多大内存，多大带宽，多少核CPU。</p><p>这也是没有做过研发工作的同学经常忽略的，因为大家好像默认 磁盘、内存、带宽、cpu是无穷的。</p><p>其实我们在设计一个模块的时候，这些都要评估的，不能模块一上线，把机器直接打爆了，例如 直接把带宽打满了，不仅影响自己的模块功能，还影响了机器上其他模块的运行。</p><h1 id="8-考虑部署"><a href="#8-考虑部署" class="headerlink" title="8.考虑部署"></a>8.考虑部署</h1><p>要考虑如果一台机器挂了（可能是硬件原因），那么我们的模块还能不能正常提供服务。</p><p>这就是考虑模块的容灾性，一般都是采用分布式，服务部署在三台机器上，一台如果挂了，还有其他两台提供服务。</p><p>还有就是要弹性可伸缩，即我们的模块可不可以直接 部署多台机器来提高承载能力。</p><p>如果用户量突然上来了，或者流量突然上来了，可以通过快速部署多台机器来抗住流量。而不是模块只能在单机上跑，多部署几台就发生各种问题。</p><p>这才能说明是有足够强的风险意识的。</p><h1 id="9-设计评审"><a href="#9-设计评审" class="headerlink" title="9.设计评审"></a>9.设计评审</h1><p>前八的阶段其实都是设计阶段，那么你的设计需要让组里的同学一起来评审一下，看看有没有什么问题。</p><p>大家主要也是看看你的模块 会不会给其他模块或者整个系统带来什么问题 以及 设计的是否合理。</p><h1 id="10-写代码"><a href="#10-写代码" class="headerlink" title="10.写代码"></a>10.写代码</h1><p>终于到写代码的阶段了，其实到这时候，是最容易的。</p><p>写代码就是体力活了，不是脑力活了。</p><h1 id="11-自测"><a href="#11-自测" class="headerlink" title="11.自测"></a>11.自测</h1><p>写完代码，我们需要自测，自己的功能会不会有什么问题。</p><p>这里可能需要自己造一造数据，跑一跑 看看和预想的是不是一样的。</p><h1 id="12-联调"><a href="#12-联调" class="headerlink" title="12.联调"></a>12.联调</h1><p>自己的模块可能会涉及到其他模块之间的一个交互，或者和前端的一个交互。</p><p>所以需要其他同学配合一起来测试。</p><p>这里就有很多沟通工作了，因为其他同学可能手头有自己的活，那么就要协调一个时间来一起测试。</p><p>这一步也是很费时间的，其费时关键是要等，要等其他同学有空和你联调，而且往往不是联调一次就能解决问题的。</p><p>所以 在评估开发时间的时候 也要考虑到联调的时间。</p><p>这也是大厂研发效率低的地方，但上百人开发的项目，这种沟通上消耗也是在所难免的。</p><h1 id="13-交给测试"><a href="#13-交给测试" class="headerlink" title="13.交给测试"></a>13.交给测试</h1><p>自己的代码，自己测 一般都测不出什么问题，需要交给测试同学来给你测一测。</p><p>这里如果测试同学测出问题，你就要判断确实有问题还是 测试方式不对，如果有问题就要修改，在提给测试，反反复复这么几轮，直到测试同学测试没问题了。</p><p>这个过程也是累心的。</p><h1 id="14-code-review"><a href="#14-code-review" class="headerlink" title="14.code review"></a>14.code review</h1><p>代码合入主干之前，需要 项目组的同学一起来评审一下你的代码。</p><p>之前是评审设计，看设计上有没有什么缺失，这次是大家来看看你代码写的怎么样。</p><p>例如合入主干会不会有什么问题，代码兼容性做的好不好，接口设计的好不好，甚至字段，函数，变量名，命名合不合理。</p><p>都要经过大家的评审，如果有问题就还是要改。</p><p>如果没有问题一般 大家会给+2（就是通过的意思），这样就可以合入主干了。</p><h1 id="15-合入主干"><a href="#15-合入主干" class="headerlink" title="15.合入主干"></a>15.合入主干</h1><p>合入主干为什么会单独列出来呢。</p><p>其实合入主干是很重要的，经常是自己的代码没问题，但合入主干之后就有问题了。</p><p>一般就是合入主干的时候有冲突，例如你从主干拉出一个分支，另一个同学从主干拉出一个分支，而且两个分支修改了同一个模块，如果另一个同学提前合入主干，你在合入主干的时候就会有代码冲突。</p><p>在解决代码冲突的时候 就会修改别人的代码，这个过程很容易产生新的bug。</p><p>一般合入主干之后，测试同学还要重新跑一个全量测试，才能放心发布。</p><h1 id="16-发布"><a href="#16-发布" class="headerlink" title="16.发布"></a>16.发布</h1><p>最后一步就是发布了。</p><p>发布其实就是把主干的代码更新到线上的服务器上。</p><p>一些还没有工作的同学，可能不太理解究竟什么是发布。</p><p>用大白话来讲，就是把 本地的代码或者某台机器的代码，编译成可执行文件，然后更新到 线上的服务器（一个独立的集群，专门处理线上的流量）并运行起来。</p><p>上线是最重要的一步了，也很容易出问题，因为一个大型项目，其上线的过程都非常复杂（要更新上百台机器的集群），而且要考虑线上新版和旧版本的兼容问题。</p><p>这也是为什么大厂项目都选择深夜上线，因为深夜在线用户最少，如果出问题，影响的用户会比较少，可以快速修复。</p><p>所以大家经常看到 某大厂程序员深夜上线发布版本之类的。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>好了，整整讲了十六个步骤！把大厂研发流程中 具体都有哪一步，为什么要这么做，都分析的很清楚了。</p><p>不过在大厂也不是所有部门都按照这个流程来的，每个部门都有自己玩法，各个部门也不太统一。</p><p>我这里是介绍的是已经比较规范的流程，但流程越正规，研发效率就越低，想要提高效率，就是简化流程，简化流程，就会提高项目出错的概率。</p><p>所以这也是一个相互权衡的过程，每一个部门可能根据自己的业务特点，适当简化流程。</p><p>好了，讲了这么多，希望对录友们有所启发。</p><p>原文链接：<a href="https://programmercarl.com/%E5%89%8D%E5%BA%8F/%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E5%8E%82%E7%A0%94%E5%8F%91%E6%B5%81%E7%A8%8B.html#_1-%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3">https://programmercarl.com/%E5%89%8D%E5%BA%8F/%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E5%8E%82%E7%A0%94%E5%8F%91%E6%B5%81%E7%A8%8B.html#_1-%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3</a></p>]]></content>
      
      
      <categories>
          
          <category> 略知一二 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进击大厂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常开发中，String常用的方法</title>
      <link href="/2022/03/24/daily-development-String/"/>
      <url>/2022/03/24/daily-development-String/</url>
      
        <content type="html"><![CDATA[<p><br>作者：orcl<br><br>博客：<a href="https://orcl-zung.github.io/">https://orcl-zung.github.io/</a></p><blockquote><p>你知道的越多，不知道的越多</p></blockquote><h2 id="一、String的构造方法"><a href="#一、String的构造方法" class="headerlink" title="一、String的构造方法"></a>一、String的构造方法</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 把字符串数据封装成字符串对象</span><span class="token class-name">String</span><span class="token punctuation">(</span><span class="token class-name">String</span> original<span class="token punctuation">)</span><span class="token comment">// 把字符数组的数据封装成字符串对象        </span><span class="token class-name">String</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span><span class="token comment">// 把字符数组中的一部分数据封装成字符串对象        </span><span class="token class-name">String</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、String类的获取功能："><a href="#二、String类的获取功能：" class="headerlink" title="二、String类的获取功能："></a>二、String类的获取功能：</h2><ul><li><code>length()</code>：获取字符串的长度，其实也就是字符个数<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>运行结果：<br>18</li><li><code>charAt(int index)</code>：获取指定索引处的字符<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'d'</span><span class="token punctuation">,</span><span class="token char">'s'</span><span class="token punctuation">,</span><span class="token char">'f'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>运行结果：<br>发</li><li><code>indexOf(String str)</code>：获取str在字符串对象中第一次出现的索引</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>9</p><ul><li><code>substring(int start)</code>：从start开始截取字符串<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>运行结果：<br>dsfaxsdfas沙发上发地方</li><li><code>String substring(int start,int end)</code>：从start开始，到end结束截取字符串。包括start，不包括end<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>运行结果：<br>dsfaxsdfas沙<h2 id="三、String判断功能"><a href="#三、String判断功能" class="headerlink" title="三、String判断功能"></a>三、String判断功能</h2></li><li><code>equals(Object obj)</code>：比较字符串的内容是否相同<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"adsfaxsdfas沙发上发地方"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"adsfaxsdfas"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>运行结果：<br>true<br>false</li><li><code>equalsIgnoreCase(String anotherString)</code>：比较字符串的内容是否相同,忽略大小写<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">"ADsfaxsdfAs沙发上发地方"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>运行结果：<br>true</li><li><code>startsWith(String prefix)</code>：判断字符串对象是否以指定的字符开头（区分大小写）<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>运行结果：<br>true<br>false</li><li><code>startsWith(String prefix,int toffset)</code>：判断字符串对象是否以指定的字符开头，参数toffset为指定从哪个下标开始<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>运行结果：<br>true<br>false</li><li><code>endsWith(String str)</code>：判断字符串对象是否以指定的字符结尾<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上案发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"方"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>运行结果：<br>false<br>true</li><li><code>isEmpty()</code>：判断指定字符串是否为空</li></ul><h2 id="四、String类中的转化方法："><a href="#四、String类中的转化方法：" class="headerlink" title="四、String类中的转化方法："></a>四、String类中的转化方法：</h2><ul><li><code>toCharArray()</code>：把字符串转换为字符数组</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上发地方"</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">char</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：<br>a–d–s–f–a–x–s–d–f–a–s–沙–发–上–发–地–方–</p><ul><li><p><code>toLowerCase()</code>：把字符串转换为小写字符串</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>abcdefghijklmnopqrstuvwxyz</p></li><li><p><code>toUpperCase()</code>：把字符串转换为大写字符串</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyz"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>ABCDEFGHIJKLMNOPQRSTUVWXYZ</p><h2 id="五、其他常用方法"><a href="#五、其他常用方法" class="headerlink" title="五、其他常用方法"></a>五、其他常用方法</h2></li><li><p><code>trim()</code>：去除字符串两端空格</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str3 <span class="token operator">=</span> <span class="token string">"    a  c  e x u a n x u a n    "</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str3<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span><span class="token punctuation">;</span>运行结果：a  c  e x u a n x u a n    a  c  e x u a n x u a n   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>split()</code>：去除字符串中指定的的字符，然后返回一个新的字符串</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上发地方"</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> array<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printString</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printString</span><span class="token punctuation">(</span><span class="token class-name">String</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：<br>dsfxsdfs沙发上发地方</p><ul><li><code>subSequence(int beginIndex,int endIndex)</code>：截取字符串中指定位置的字符组成一个新的字符串<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">subSequence</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>运行结果：<br>dsfaxsdfa</li><li><code>replace(char oldChar, char newChar)</code>：将指定字符替换成另一个指定的字符</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token char">'a'</span><span class="token punctuation">,</span> <span class="token char">'s'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>sdsfsxsdfss沙发上发地方</p><ul><li><p><code>replaceAll(String regex,String replasement)</code>：用新的内容替换全部旧内容</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str4 <span class="token operator">=</span> <span class="token string">"Hello,world!"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str4<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"l"</span><span class="token punctuation">,</span> <span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>He&amp;&amp;o,wor&amp;d!</p></li><li><p><code>replaceFirst(String regex,String replacement)</code>：替换首个满足条件的内容</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"adsfaxsdfas沙发上发地方"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">replaceFirst</span><span class="token punctuation">(</span><span class="token string">"沙"</span><span class="token punctuation">,</span> <span class="token string">"璇"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>adsfaxsdfas璇发上发地方</p></li><li><p><code>lastIndexOf(String str)</code>：返回指定字符出现的最后一次的下标</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str4 <span class="token operator">=</span> <span class="token string">"Hello,world!"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str4<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>9</p><ul><li><code>contains(CharSequence s)</code>：查看字符串中是都含有指定字符</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str4 <span class="token operator">=</span> <span class="token string">"Hello,world!"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str4<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>true</p><ul><li><code>concat(String str)</code>：在原有的字符串的基础上加上指定字符串</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str5 <span class="token operator">=</span> <span class="token string">"dr"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str5<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"eam"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行结果：<br>dream</p><h2 id="六、开发过程中经常用到的方法"><a href="#六、开发过程中经常用到的方法" class="headerlink" title="六、开发过程中经常用到的方法"></a>六、开发过程中经常用到的方法</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 截取字符串str中指定字符 strStart、strEnd之间的字符串 * * @param str      待截取的字符串 * @param strStart 起始字符或字符串 * @param strEnd   截止字符或字符串 * @return */</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">subString</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token class-name">String</span> strStart<span class="token punctuation">,</span> <span class="token class-name">String</span> strEnd<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 找出指定的2个字符在该字符串里面的位置 </span>    <span class="token keyword">int</span> strStartIndex <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>strStart<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> strEndIndex <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>strEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// index为负数，即表示该字符串中没有该字符</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>strStartIndex <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"字符串 :---->"</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">"&lt;---- 中不存在 "</span> <span class="token operator">+</span> strStart <span class="token operator">+</span> <span class="token string">", 无法截取目标字符串"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>strEndIndex <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"字符串 :---->"</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">"&lt;---- 中不存在 "</span> <span class="token operator">+</span> strEnd <span class="token operator">+</span> <span class="token string">", 无法截取目标字符串"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 开始截取</span>    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>strStartIndex<span class="token punctuation">,</span> strEndIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>strStart<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 基础不牢，地动山摇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java八股文 </tag>
            
            <tag> 面试必备 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
